import React, { useState, useEffect } from 'react';

// useEffect : Ïª¥Ìè¨ÎÑåÌä∏Ïùò ÏÉùÎ™ÖÏ£ºÍ∏∞ Ï§ëÏóê Ïã§ÌñâÌï† ÏûëÏóÖÏùÑ ÏÑ§Ï†ï
//  1. Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÎßàÏö¥Ìä∏ Îê† Îïå (Ï≤òÏùå ÌôîÎ©¥Ïóê ÎÇòÌÉÄÎÇ† Îïå)
//  2. Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä Ïñ∏ÎßàÏö¥Ìä∏ Îê† Îïå (ÏÇ¨ÎùºÏßà Îïå)
//  3. Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÏóÖÎç∞Ïù¥Ìä∏ Îê† Îïå (ÌäπÏ†ï props, stateÍ∞Ä Î∞îÎÄî Îïå)

// useEffect(ÏΩúÎ∞±Ìï®Ïàò, [ÏùòÏ°¥ÏÑ±Î∞∞Ïó¥]);
// ÏùòÏ°¥ÏÑ±Î∞∞Ïó¥ : ÏùòÏ°¥ÌïòÎäî Í∞íÏù¥ Îì§Ïñ¥ÏûàÎäî Î∞∞Ïó¥
// ÏùòÏ°¥ÏÑ±Î∞∞Ïó¥ ÏóÜÏùå : ÎûúÎçîÎßÅÏùº Ïã§ÌñâÎê† ÎïåÎßàÎã§ ÏÑ§Ï†ïÌïú ÏûëÏóÖÏùÑ ÏàòÌñâ
// [] : Ï≤òÏùå Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÎÇòÌÉÄÎÇ† ÎïåÎßå ÏÑ§Ï†ïÌïú ÏûëÏóÖÏùÑ ÏàòÌñâ
// [data] : Ï≤òÏùå Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÎÇòÌÉÄÎÇ† ÎïåÏôÄ ÏßÄÏ†ïÌïú Í∞íÏù¥ Î∞îÎÄî ÎïåÎßàÎã§ ÏÑ§Ï†ïÌïú ÏûëÏóÖÏùÑ ÏàòÌñâ
// * Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÏÇ¨ÎùºÏßà ÎïåÎäî returnÏóê ÏÑ§Ï†ïÌïú Ìï®ÏàòÎ•º Ìò∏Ï∂ú

// useEffectÏùò ÏÇ¨Ïö©
// 1. Ïñ¥Î†§Ïö¥ Ïó∞ÏÇ∞
// 2. ÏÑúÎ≤Ñ API Ìò∏Ï∂ú
// 3. ÌÉÄÏù¥Î®∏ ÏÑ§Ï†ï
// 4. Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄ ÏÇ¨Ïö©
// 5. Ïô∏Î∂ÄÎùºÏù¥Î∏åÎü¨Î¶¨ ÏÇ¨Ïö©

const InfoEffect = () => {
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');

    const onChangeName = (e) => setName(e.target.value);
    const onChangeEmail = (e) => setEmail(e.target.value);

    // useEffect(()=>{
    //     console.log('Î†åÎçîÎßÅ~üé®');
    // });

    useEffect(() => {
        console.log('ÏµúÏ¥àÎ°ú Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÌôîÎ©¥Ïóê Ï∂úÎ†•Îê† ÎïåÎßå Ïã§Ìñâ');
        return () => {
            console.log('Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÌôîÎ©¥ÏóêÏÑú ÏÇ¨ÎùºÏßëÎãàÎã§.');
        }
    }, []);

    // useEffect(() => {
    //     console.log('ÏµúÏ¥àÎ°ú Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÎÇòÌÉÄÎÇ¨Í±∞ÎÇò Ïù¥Î¶ÑÏù¥ Î≥ÄÍ≤ΩÎêòÏóàÏäµÎãàÎã§.');
    // }, [name]);

    // useEffect(() => {
    //     console.log('ÏµúÏ¥àÎ°ú Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÎÇòÌÉÄÎÇ¨Í±∞ÎÇò Ïù¥Î¶Ñ ÎòêÎäî Ïù¥Î©îÏùºÏù¥ Î≥ÄÍ≤ΩÎêòÏóàÏäµÎãàÎã§.');
    // }, [name, email]);

    // useEffect(() => {
    //     for(let i=0; i < 1_000_000_000; i++) {}  // ÏãúÍ∞ÑÏù¥ Ïò§Îûò Í±∏Î¶¨Îäî Í≥ÑÏÇ∞
    //     console.log('ÏµúÏ¥àÎ°ú Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä ÎÇòÌÉÄÎÇ¨Í±∞ÎÇò Ïù¥Î©îÏùºÏù¥ Î≥ÄÍ≤ΩÎêòÏóàÏäµÎãàÎã§.');
    // }, [email]);

    return (
        <div>
            <div>
                <label>
                    Ïù¥Î¶Ñ : 
                    <input type='text' value={name} onChange={onChangeName} />
                </label>
                <label>
                    Ïù¥Î©îÏùº :
                    <input type='text' value={email} onChange={onChangeEmail} />
                </label>
            </div>
            <div>
                <p>{`Ïù¥Î¶Ñ : ${name} / Ïù¥Î©îÏùº : ${email}`}</p>
            </div>
        </div>
    );
}

export default InfoEffect;